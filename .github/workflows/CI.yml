# 240825 manifest git action까지 넣은 버전

name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS environment variables
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create ECR repository if not exists
        run: |
          aws ecr describe-repositories --repository-names my-app || \
          aws ecr create-repository --repository-name my-app --region $AWS_REGION

      - name: Build Docker image
        id: build-image
        run: |
          docker build -t ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/my-app-repo:latest .

      - name: Push Docker image to Amazon ECR
        id: push-image
        run: |
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/my-app-repo:latest

      - name: Clone and update manifest repository
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}  # PAT_TOKEN을 환경 변수로 설정
        run: |
          git clone https://${{ secrets.PAT_TOKEN }}@github.com/KingKyeong-Rok/manifest.git
          cd manifest
          sed -i "s|image: .*|image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/my-app:latest|" k8s/deploy-basic2.yml
          git config --global user.email "0088skg@naver.com"
          git config --global user.name "KingKyeong-Rok"
          git add k8s/deploy-basic2.yml
          git commit -m "Update image to latest"
          git push https://${{ secrets.PAT_TOKEN }}@github.com/KingKyeong-Rok/manifest.git main









# 240825 build 과정 뺀 버전

# name: CI

# on:
#   push:
#     branches: [ main ]
#     paths-ignore:
#       - '.gitignore'
#       - '.dockerignore'
#       - 'README.md'
#   pull_request:
#     branches: [ main ]

# jobs:
#   ci:
#     runs-on: ubuntu-latest
#     outputs:
#       IMAGE_TAG: ${{ steps.set-var.outputs.IMAGE_TAG }}
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 1

#       - name: Set up AWS environment variables
#         env:
#           AWS_REGION: ${{ secrets.AWS_REGION }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         run: |
#           echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
#           echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
#           echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

#       - name: Log in to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1
#         with:
#           mask-password: false
#           registry-type: private
#           skip-logout: false

#       - name: Set var
#         id: set-var
#         run: |
#           echo ::set-output name=ECR_REGISTRY::891377406720.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
#           echo ::set-output name=ECR_REPOSITORY::my-app-repo
#           echo ::set-output name=IMAGE_TAG::latest

#       - name: Docker image Build
#         id: build-image
#         run: |
#           docker build \
#             -f Dockerfile \
#             -t ${{ steps.set-var.outputs.ECR_REGISTRY }}/${{ steps.set-var.outputs.ECR_REPOSITORY }}:${{ steps.set-var.outputs.IMAGE_TAG }} .

#       - name: Docker image Push
#         id: push-image
#         run: |
#           docker push ${{ steps.set-var.outputs.ECR_REGISTRY }}/${{ steps.set-var.outputs.ECR_REPOSITORY }}:${{ steps.set-var.outputs.IMAGE_TAG }}



# 240824 버전
# name: CI/CD

# on:
#   push:
#     branches: [ main ]
#     paths-ignore:
#       - '.gitignore'
#       - '.dockerignore'
#       - 'README.md'
#   pull_request:
#     branches: [ main ]

# jobs:
#   ci:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 1

#       - name: Set up JDK 17
#         uses: actions/setup-java@v2
#         with:
#           java-version: '17'
#           distribution: 'adopt'

#       - name: Set up AWS environment variables
#         env:
#           AWS_REGION: ${{ secrets.AWS_REGION }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         run: |
#           echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
#           echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
#           echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

#       - name: Log in to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1
#         with:
#           mask-password: false
#           registry-type: private
#           skip-logout: false

#       - name: Build and Push Docker image with Jib
#         run: mvn jib:build
